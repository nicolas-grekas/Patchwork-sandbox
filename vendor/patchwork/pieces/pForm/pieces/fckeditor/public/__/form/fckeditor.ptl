{* vi: set fenc=utf-8 ts=4 sw=4 et:
 *
 * Copyright (C) 2012 Nicolas Grekas - p@tchwork.com
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the (at your option):
 * Apache License v2.0 (http://apache.org/licenses/LICENSE-2.0.txt), or
 * GNU General Public License v2.0 (http://gnu.org/licenses/gpl-2.0.txt).
 *}
<!--
{*

This template plugs FCKeditor

You can pass it every HTML attribute you need (class, on*, ...), they will be used to define the element.

You can control it with the additional arguments:
- a$_caption_                                       : the caption of the element, with class="required" if needed
- a$_beforeError_   |default:g$inputBeforeError     : HTML code put at the beginning of an error message
- a$_afterError_    |default:g$inputAfterError      : HTML code put at the end of an error message
- a$autofocus                                       : set the focus on this element
- a$_format_        |default:g$inputFormat          : a string to format the output where ("=>" means "is replaced by"):
                                                          %0 => the caption,
                                                          %1 => the control,
                                                          %2 => the error message,
                                                          %% => %

*}

SET a$_autofocus -->{a$autofocus|test:1:a$_autofocus}<!--  END:SET
SET a$autofocus  -->{a$_autofocus|test:'autofocus':''}<!-- END:SET

SET a$_required -->{a$required|test:1:a$_autofocus}<!--  END:SET
SET a$required  -->{a$_required|test:'_required':''}<!-- END:SET

SET a$placeholder -->{a$placeholder|default:a$_placeholder}<!-- END:SET

IF !a$id
    SET a$id -->FiD{g+1$GLOBID}<!-- END:SET
END:IF
SET a$class -->{a$class|default:a$type}<!-- END:SET

IF !a$title
    SET a$title
        -->{a$_validmsg|default:a$_caption_|replace:'<[^>]*>':''}<!--
    END:SET
END:IF


SET $CAPTION
    IF a$_caption_
        --><label for="{a$id}" class="{a$class}" onclick="return IlC(this)"><!--
        IF a$required --><span class="required"><!-- END:IF
        -->{a$_caption_}<!--
        IF a$required --></span><!-- END:IF
        --></label><!--
    END:IF
END:SET


SET $INPUT

    IF a$required --><span class="required"><!-- END:IF

    IF !g$_FCKEDITOR
        SET g$_FCKEDITOR -->1<!-- END:SET
        --><script src="{base:'fckeditor/js'}"></script><!--
    END:IF

    --><textarea {a$|htmlArgs:'type':'value'}>{a$value|replace:'{/}':g$__HOST__|replace:'{~}':g$__BASE__}</textarea><script>
lE=gLE({a$name|js}<!-- IF a$multiple -->,1<!-- END:IF -->)
if(lE){
lE.gS=function(){FCKeditorAPI.GetInstance({a$id|js}).UpdateLinkedField();if (''==this.value.replace(/(<[^>]*|[>\s]+|&(nbsp|#160);)/g,'')) this.value='';return valid(this<!-- LOOP a$_valid -->,{$VALUE|js}<!-- END:LOOP -->)}
lE.cS=function(){return IcES([0<!-- LOOP a$_elements -->,{$name|js},{$onempty|js},{$onerror|js}<!-- END:LOOP -->],this.form)}
lE=new FCKeditor({a$id|js},(''+lE.style.width).indexOf('%')>0?lE.style.width:lE.offsetWidth,(''+lE.style.height).indexOf('%')>0?lE.style.height:lE.offsetHeight,{a$_toolbarSet|js},lE.value)
lE.BasePath={~|js}+'fckeditor/src/'
<!-- IF g$__LANG__ -->
lE.Config.AutoDetectLanguage=false
lE.Config.DefaultLanguage={g$__LANG__|js}
<!-- END:IF -->
<!-- LOOP a$_config -->
<!-- SET a$a -->{$VALUE|substr:0:1}<!-- END:SET -->
lE.Config[{$KEY|js}]=<!-- IF '[' == a$a -->{$VALUE|js}<!-- ELSE -->{$VALUE|js}<!-- END:IF -->
<!-- END:LOOP -->
lE.ReplaceTextarea()
}</script><!--

    IF a$required --></span><!-- END:IF

END:SET


SET $ERROR
    IF a$_errormsg -->{a$_beforeError_|default:g$inputBeforeError}<span class="errormsg">{a$_errormsg}</span>{a$_afterError_|default:g$inputAfterError}<!-- END:IF
END:SET


-->{a$_format_|default:g$inputFormat|echo:$CAPTION:$INPUT:$ERROR}
