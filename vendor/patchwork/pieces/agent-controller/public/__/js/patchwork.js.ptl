/*
 * Copyright (C) 2012 Nicolas Grekas - p@tchwork.com
 *
 * This library is free software; you can redistribute it and/or modify it
 * under the terms of the (at your option):
 * Apache License v2.0 (http://apache.org/licenses/LICENSE-2.0.txt), or
 * GNU General Public License v2.0 (http://gnu.org/licenses/gpl-2.0.txt).
 */

/*
* eUC
* dUC
* str
* num
* esc
* unesc
* parseurl
* onDOMLoaded
* BOARD
*/

/*@cc_on
if (@_jscript_version<=5.8) {<!-- INLINE js/html5shiv.js -->}
@*/

var footerHtml = [], antiCSRF = '';

function t($v, $type)
{
    return $type ? (typeof $v == $type) : (typeof $v != 'undefined');
}

function str($var, $default)
{
    return t($var) ? ''+$var : (t($default) ? ''+$default : '');
}

function num($str, $weak)
{
    return $weak
        ? (
              t($str)
            ? (
                  t($str, 'string') && +$str + ''==$str
                ? +$str
                : $str
            ) : ''
        ) : (parseFloat($str) || 0);
}

function esc($str)
{
    return t($str, 'string')
        ? $str.replace(
            /&/g, '&amp;').replace(
            /</g, '&lt;').replace(
            />/g, '&gt;').replace(
            /"/g, '&quot;'
        ) : $str;
}

function unesc($str)
{
    return t($str, 'string') && 0 <= $str.indexOf('&')
        ? $str.replace(
            /&#039;/g, "'").replace(
            /&quot;/g, '"').replace(
            /&gt;/g  , '>').replace(
            /&lt;/g  , '<').replace(
            /&amp;/g , '&'
        ) : $str;
}

function setcookie($name, $value, $expires, $path, $domain)
{
    <!-- IF $DEBUG -->
    if ($domain && '.' != $domain.charAt(0)) E('setcookie() RFC incompatibility: $domain must start with a dot.', 1);
    <!-- END:IF -->

    document.cookie = $name + '=' + eUC($value)
        + ($expires ? '; expires=' + $expires.toGMTString() : '')
        + ($path    ? '; path='    + $path   : '')
        + ($domain  ? '; domain='  + $domain : '');
}

function parseurl($param, $delim, $rx, $array)
{
    var $i;
    $array = $array || {};

    $param = $param.split($delim);
    while ($param.length)
    {
        $i = $param.shift();
        if ($rx) $i = $i.replace($rx, '');
        $delim = $i.indexOf('=');
        if ( $delim>0 ) $array[ dUC( $i.substr(0, $delim) ) ] = num(esc(dUC( $i.substr($delim+1) )), 1);
    }

    return $array;
}

function syncCSRF($form)
{
    var $a, $antiCSRF = antiCSRF;

    if (!$form)
    {
        $form = document.forms;
        $form = $form[$form.length - 1];
    }

    if ($antiCSRF && 'post' == $form.method.toLowerCase())
    {
        if ($a = $form.action)
        {
            $a = $a.match(/^https?:\/\/([^\/:]+)\.?(:[^\/]*)?(\/[^\?#]*)/);

            if (!$a) return;

            <!-- IF '' == $cookie_path -->
            if (0 != ($a[3] + '/').indexOf(location.pathname.replace(/\/[^\/]*$/, '/'))) return;
            <!-- ELSEIF '/' != $cookie_path -->
            if (0 != ($a[3] + '/').indexOf({$cookie_path|replace:'/?$':'/'|js})) return;
            <!-- END:IF -->

            <!-- IF '' == $cookie_domain -->
            $a[2] = '.' + location.hostname;
            <!-- ELSE -->
            $a[2] = {$cookie_domain|replace:'^\.?':'.'|js};
            <!-- END:IF -->

            if (($a[1].length - $a[2].length + 1) != ('.' + $a[1]).indexOf($a[2])) return;
        }

        if ($form.T$) $form.T$.value = $antiCSRF;
        else
        {
            $a = document.createElement('input');

            $a.type = 'hidden';
            $a.name = 'T$';
            $a.value = $antiCSRF;

            $form.T$ = $a; // Workaround for a bug in IE
            $form.insertBefore($a, $form.firstChild);
        }

        if (!$form.syncCSRF)
        {
            $a = $form.onsubmit;
            $form.syncCSRF = 1;
            $form.onsubmit = function()
            {
                this.T$.value = antiCSRF;
                return $a && $a();
            }
        }

        $form = 0;
    }
}

function resyncCSRF()
{
    var $resyncCSRF = resyncCSRF,
        $document = document,
        $forms = $document.forms,
        $cookie = $document.cookie.match(/(^|; )T\$=([-_0-9a-zA-Z]+)/);

    $cookie = $cookie && $cookie[2];

    if (antiCSRF = antiCSRF || $cookie)
    {
        if (antiCSRF != $cookie)
            $resyncCSRF.$formsLength = 0,
            antiCSRF = $cookie;

        while ($resyncCSRF.$formsLength < $forms.length) syncCSRF($forms[$resyncCSRF.$formsLength++]);

        return $cookie;
    }
}

resyncCSRF.$formsLength = 0;

var onDOMLoaded = [];
onDOMLoaded.go = function($i, $pool)
{
    $pool = onDOMLoaded;

    if (document.addEventListener)
    {
        document.removeEventListener('DOMContentLoaded', $pool.go, false);
    }
    else if (document.attachEvent)
    {
        if (1 != $i && document.readyState != 'complete') return;
        document.detachEvent('onreadystatechange', $pool.go);
    }

    $pool.go = function() {};

    if (1 != $i)
    {
        resyncCSRF();

        $i = 0;
        while ($i < $pool.length) setTimeout($pool[$i], 1), $pool[$i++]=0;

        $pool = document.getElementsByName('w$');
        $i = $pool.length;
        while ($i--) $pool[$i].parentNode.removeChild($pool[$i]);
    }

    onDOMLoaded.length = 0;
}

if (document.addEventListener)
{
    document.addEventListener('DOMContentLoaded', onDOMLoaded.go, false);
}
else if (document.attachEvent)
{
    document.attachEvent('onreadystatechange', onDOMLoaded.go);
}

var w = function($baseAgent, $keys, $masterAppId, $buffer, $dataUri)
{
    $masterAppId /= 1;

    var $document = document,

        $insideTag = '',
        $includeSrc = '',
        $trustReferer = 0,
        $reloadRequest = 0,
        $reloadNoCache = 0,

        $WexecStack = [],
        $WexecLast = 0,

        $WobStack = [],
        $WobLast = 0,

        $i, $j, $loopIterator = [],

        a, d, v, g,
        $AppId = $masterAppId,

        $lastInclude = '',
        $includeCache = {},
        $startTime = /(^|; )JS=[01](; |$)/,

        $masterBase = esc({g$__BASE__|js});

    $dataUri = !$dataUri ? $masterBase + 'js/x' : 'data:text/javascript,w.c()';

    try
    {
        $document.execCommand("BackgroundImageCache", false, true);
    }
    catch ($i) {}

    $j = /MSIE [0-5]\./.test(navigator.userAgent) ? 0 : 1;
    $i = location.host.match(/[^.]+\.[^\.0-9]+$/);
    $i = $i ? '.' + $i[0] : 0;
    setcookie('JS', $j, new Date(+new Date + {$maxage+0|js}000), '/', $i);
    $startTime.test($document.cookie) || setcookie('JS', $j, 0, '/', $i);

    window.base = function($str, $noId, $master)
    {
        t($str) || ($str = '');

        if (!/^[a-z][-.+a-z0-9]*:/i.test($str))
        {
            $master = $master ? $masterBase : g.__BASE__;
            $noId = !$str || $noId;

            $str = (
                  0 == $str.indexOf('/')
                ? $master.substr(0, $master.indexOf('/', 8))
                : $master
            ) + $str;

            if (!$noId && '/' != $str.substr(-1)) $str += (-1 == $str.indexOf('?') ? '?' : '&') + $masterAppId;
        }

        return $str;
    }

/*
*       a : arguments
*       d : data, local root
*       v : data, local
*       v.$ : data, parent
*       g : get

*       w.k() : get agent's keys
*       w.w() : does document.write()
*       w.r() : flag the page for location.reload()
*       w.x() : loop construtor for data arrays
*       y() : loop construtor for numbers
*       z() : counter initialization and incrementation
*/

    function $echo($a)
    {
        t($a) && ($WobLast ? $WobStack[$WobLast] : $buffer).push($a);
    }

    function $include($inc, $args, $keys, $cache, $i, $j, $k)
    {
        if ($args)
        {
            if (-1 == $inc.indexOf('?')) $inc += '?';

            if ($keys)
            {
                antiCSRF && ($args.T$ = antiCSRF);

                if ($args.e$) for ($i in $args) $args[$i] = num(str($args[$i]), 1);
                else          for ($i in $args) $args[$i] = num(    $args[$i] , 1);

                $k = [];

                for ($i = 0; $i < $keys.length; ++$i)
                    if (($j = $keys[$i]) && t($args[$j]))
                        $k.push('&amp;' + eUC($j) + '=' + eUC(unesc($args[$j])));

                $k = $k.join('');

                if ($args.e$ && $k) $args.__URI__ += '?' + $k.substr(5);
                a = $args;

                $inc += $k;
            }
            else
            {
                w.k = function($id, $base, $agent, $__0__, $keys)
                {
                    $base = esc($base);
                    $agent = esc($agent);

                    $__0__ += '';
                    $args.__0__ = $__0__;
                    $__0__ = $__0__.split('/');
                    for ($i = 0; $i < $__0__.length; ++$i) $args['__' + ($i+1) + '__'] = $__0__[$i];

                    if ($base != g.__BASE__)
                    {
                        $AppId = +$id;

                        $args.__DEBUG__    = g.__DEBUG__;
                        $args.__LANG__     = g.__LANG__;
                        $args.__BASE__     = $base;
                        $args.__HOST__     = $base.substr(0, $base.indexOf('/', 8)+1);
                        $args.__AGENT__    = $agent ? $agent + '/' : '';
                        $args.__URI__      = $base + $agent;
                        $args.__REFERER__  = g.__REFERER__;
                        $args.__LANG_ALT__ = g.__LANG_ALT__;
                        $args.e$ = 1;

                        g = $args;
                    }

                    $include($base + $agent + '?p:=a', $args, $keys, 2)
                }

                $inc += '&amp;p:=k:' + g.__LANG__;
                $cache = 0;
            }
        }

        $lastInclude = $cache ? $inc : '';

        return $cache && t($includeCache[$inc])
            ? w($includeCache[$inc][0], $includeCache[$inc][1], $cache - 1 ? 0 : $WexecLast)
            : ($includeSrc = $inc, !w.w());
    }

    w = function($context, $code, $WexecLastLimit)
    {
        $code = $code || [];
        $WexecLastLimit = $WexecLastLimit || 0;

        var $origContext,
            $pointer = 0,
            $arguments = a,
            $localAppId = $AppId,
            $localG = g,
            $bytecode = [

            // 0: pipe
            function($code)
            {
                var $i = $code[$pointer++], $j;

                if ($i)
                {
                    $code[$pointer-1] = 0;

                    $i = $i.split('.');
                    $j = $i.length;
                    while ($j--) $i[$j] = t(window['P$'+$i[$j]]) ? '' : ('.'+$i[$j]);

                    $i = $i.join('');

                    if ($i) return $include(g.__BASE__ + '?p:=p:' + esc($i.substr(1)));
                }
            },

            // 1: agent
            function($code)
            {
                var $agent = $getNext($code),
                    $args = $getNext($code),
                    $keys = $code[$pointer++],
                    $meta = $code[$pointer++],
                    $data, $i, $j;

                <!-- IF g$__DEBUG__ -->
                if (!t($agent))
                {
                    $i = '' + $code[$pointer-4];
                    E('Undefined AGENT: ' + $i.substring(7+$i.indexOf('return '), $i.indexOf(';')), 1);
                    return;
                }
                <!-- ELSE -->
                if (!t($agent)) return;
                <!-- END:IF -->

                if (t($agent, 'function'))
                {
                    $agent = $agent();
                    while ($j = $agent()) $data = $j;

                    $agent = $data.a$;
                    $keys = $data.k$ ? $data.k$.split(',') : [];

                    for ($i in $data) if (!/\$/.test($i)) t($args[$i]) || ($args[$i] = $data[$i])

                    if ($data.r$) $meta = [$data.v$, $data.r$];
                }

                $agent = esc($agent);

                if (!$meta) $agent = g.__BASE__ + $agent + '?p:=t';
                else
                {
                    if ($meta > 1)
                    {
                    <!-- IF g$__DEBUG__ -->
                        if (/^(\/|https?:\/\/)/.test($agent))
                        {
                            if (2 == $meta)
                            {
                                E('EXOAGENT (' + $agent + ') called with AGENT', 1);
                                return;
                            }

                            $keys = 0;
                        }
                        else if (3 == $meta)
                        {
                            E('AGENT (' + $agent + ') called with EXOAGENT', 1);
                            return;
                        }
                    <!-- ELSE -->
                        if (/^(\/|https?:\/\/)/.test($agent))
                        {
                            if (2 == $meta) return;

                            $keys = 0;
                        }
                    <!-- END:IF -->
                    }
                    else if (1 != $meta)
                    {
                        $AppId = +$meta[0];

                        $args.__DEBUG__    = g.__DEBUG__;
                        $args.__LANG__     = g.__LANG__;
                        $args.__BASE__     = esc($meta[1]);
                        $args.__HOST__     = $args.__BASE__.substr(0, $args.__BASE__.indexOf('/', 8)+1);
                        $args.__AGENT__    = $agent ? $agent + '/' : '';
                        $args.__URI__      = $args.__BASE__ + $agent;
                        $args.__REFERER__  = g.__REFERER__;
                        $args.__LANG_ALT__ = g.__LANG_ALT__;
                        $args.e$ = 1;

                        g = $args;
                    }

                    $agent = $keys ? g.__BASE__ + $agent + '?p:=a' : base($agent, 1);
                }

                return $include($agent, $args, $keys, 1) ? 1 : -1;
            },

            // 2: echo
            function($code)
            {
                $echo( $code[$pointer++] );
            },

            // 3: eval echo
            function($code)
            {
                $echo( $getNext($code) );
            },

            // 4: set
            function($code)
            {
                $WobStack[++$WobLast] = [];
            },

            // 5: endset
            function($code)
            {
                var $i = $code[$pointer++], $j;

                if (1 == $i) $i = g;
                else if (2 == $i) $i = d;
                else if ($i)
                {
                    $j = $i - 2;
                    $i = v;
                    while (--$j) $i = $i.$;
                }
                else $i = a;


                $i[$code[$pointer++]] = num($WobStack[$WobLast--].join(''), 1);
            },

            // 6: jump
            function($code)
            {
                $pointer += $code[$pointer];
            },

            // 7: if
            function($code)
            {
                ($getNext($code) && ++$pointer) || ($pointer += $code[$pointer]);
            },

            // 8: loop
            function($code)
            {
                var $i = $getNext($code);
                ($i && (t($i, 'function') || ($i = y(+$i))) && $i()() && ++$pointer) || ($pointer += $code[$pointer]);
                $context = v;
            },

            // 9: next
            function($code)
            {
                ($loopIterator() && ($pointer -= $code[$pointer])) || ++$pointer;
                $context = v;

                if (new Date - $startTime > 500) return $include($dataUri);
            }
        ];

        if (!$WexecLastLimit)
        {
            $startTime = new Date;

            resyncCSRF();

            if ($masterBase == g.__BASE__
                && ($i = $document.cookie.match(/(^|; )v\$=([0-9]+)(; |$)/))
                && ($i = +$i[2]) != $masterAppId
            )
                $masterAppId = $AppId = $localAppId = $i,
                $code = [],
                w.r();
        }

        <!-- IF g$__DEBUG__ -->var DEBUG = $i = 0;<!-- END:IF -->

        if ($lastInclude && !$includeCache[$lastInclude])
        {
            $includeCache[$lastInclude] = [$context, $code];
            if ($context) for ($i in $context) $context[$i] = esc($context[$i]);

            <!-- IF g$__DEBUG__ -->
            DEBUG = $i ? 2 : 1;
            <!-- END:IF -->
        }

        if ($context) $context.$ = v = $context;
        else $context = v;

        $origContext = $context;

        <!-- IF g$__DEBUG__ -->
        if (DEBUG) E({
            'Agent': dUC(($lastInclude.substr(g.__BASE__.length)).replace(/(&(amp;)?|\?)/g, ', ').replace(/=/g, '=')),
            'Arguments': a,
            'Data': DEBUG-1 ? $context : ''
        });
        <!-- END:IF -->

        function $getNext($code)
        {
            ('')['in']; // I don't know why, but without this, Firefox' JIT breaks the code

            $code = $code[$pointer++];

            return typeof $code == 'function' ? $code(a, d, v, g, z, g.__BASE__) : $code;
        }

        $WexecStack[++$WexecLast] = function()
        {
            var $b = $bytecode, $c = $code, $codeLen = $c.length, $i;

            d = $origContext;
            a = $arguments;
            v = $context;

            $AppId = $localAppId;
            g = $localG;

            while (++$pointer <= $codeLen) if ($i = $b[$c[$pointer-1]]($c))
            {
                if (0 < $i) return 1;

                d = $origContext;
                a = $arguments;
                v = $context;

                $AppId = $localAppId;
                g = $localG;
            }

            $WexecStack[$WexecLast] = 0;
        };

        do if ($WexecStack[$WexecLast]()) return 1;
        while (--$WexecLast > $WexecLastLimit);

        if (!$WexecLast) return !w.w();
    }

    w.w = function()
    {
        var $src = $includeSrc,
            $content = $reloadRequest ? '' : $buffer.join(''),
            $rx,
            $offset = 0,
            $split = -1,
            $i;

        if ($insideTag)
        {
            $rx = '!--' == $insideTag
                ? /-->\s*/
                : new RegExp('<\\/' + $insideTag + '\\s*>\\s*' + (/*@cc_on!@*/0 ? '(?:<!\\[endif\\](?:--)?>\\s*)*' : ''), 'i');

            if ($rx.exec($content))
            {
                $offset = $rx.lastIndex;
                $insideTag = '';
            }
        }

        $includeSrc = '';
        $buffer = [];
        w.c = w;

        if (!$insideTag)
        {
            $rx = /*@cc_on!@*/0
                ? /<(?:(?:script(\s[\s\S]*?[^-\]])>\s*<)?\/(script|style|noscript|title|textarea|iframe)\s*|--)>\s*(?:<!\[endif\](?:--)?>\s*)*/ig
                :                                   /<(?:\/(script|style|noscript|title|textarea|iframe)\s*|--)>\s*/ig;
            $rx.lastIndex = $offset;

            while ($i = $rx.exec($content))
            {
                $offset = $rx.lastIndex;

                if (/*@cc_on!@*/0)
                {
                    if ('script' == $i[2] && $i[1])
                    {
                        // IE loads scripts in parallel when using document.write, but we may want serialized loading

                        $i[1] = $i[1].replace(/(?:\s*=\s*([^\s<>"']*|(['"])[\s\S]*?\2)\s*)/g, ' ');

                        if (/\ssrc\b/i.test($i[1]) && ($split >= 0 ? $split == $i.index : !/\s(async|defer)\b/i.test($i[1])))
                        {
                            $split = $offset;
                            continue;
                        }
                    }

                    if (0 <= $split) break;
                }
            }
        }

        if (0 <= $split && $split < $content.length)
        {
            $includeSrc = $src;
            $src = $dataUri;
            w.c = w.w;
        }
        else if ($insideTag) $split = 0;
        else if ($src)
        {
            $rx = /*@cc_on!@*/0
                ? /<(?:!(?:--)?\[if\s[^\]>]*\]>\s*<)*((script|style|noscript|title|textarea|iframe)\b|!--)/ig
                :                                  /<((script|style|noscript|title|textarea|iframe)\b|!--)/ig;
            $rx.lastIndex = $offset;

            if ($i = $rx.exec($content))
                $split = $i.index,
                $insideTag = $i[1];
        }
        else $split = -1;

        if (0 <= $split)
            $buffer = [$content.substr($split)],
            $content = $content.substr(0, $split);

        if ($src)
        {
            $i = '';

            if ('http' == $src.substr(0, 4))
            {
                $src += (0 <= $src.indexOf('?') ? '&amp;' : '?') + 'v$=' + $AppId;

                if ($trustReferer || /(^|; )T\$=1/.test($document.cookie)) $trustReferer = 1;
                else $i = '<script name="w$">document.cookie="R$="+eUC((""+location).replace(/#.*$/,""))+"; path=/"</script>';
            }

            $src = $i + '<script name="w$" src="' + $src + '"></script>';

            $document.write($content + $src);
        }
        else
        {
            // Memory leaks prevention
            w = y = z = w.c = w.k = w.w = w.r = w.x = $loopIterator = 0;

            if ($reloadRequest)
            {
                onDOMLoaded.go(1);
                $document.close();
                $document = 0;
                location.reload($reloadNoCache);
            }
            else
            {
                $i = $content.search(/<\/body\b/i);

                if (0 <= $i)
                    $src += $content.substr($i),
                    $content = $content.substr(0, $i);

                $document.write($content + '<script>onDOMLoaded.go()</script>' + $src);
                $document.close();
            }
        }
    }

    w.r = function($now, $noCache)
    {
        if ($masterBase != g.__BASE__) setcookie('cache_reset_id', $masterAppId, 0, '/');
        $reloadRequest = 1;
        $reloadNoCache = $reloadNoCache || !!$noCache;
        if ($now) $WexecLast = $WexecStack.length = 0;
    }

    w.x = function($data)
    {
        if (!$data[0]) return 0;

        var $block, $offset, $parent, $blockData, $parentLoop, $counter,

            $next = $data[1][0]

                ? function($i, $j)
                {
                    $blockData = $data[$block];
                    $offset += $j = $blockData[0];

                    if ($offset + $j >= $blockData.length) return t($data[++$block])
                        ? ($offset = 0, $next())
                        : (v = v.$, $loopIterator = $parentLoop, 0);

                    v = {};
                    for ($i = 1; $i <= $j; ++$i) v[ $blockData[$i] ] = esc($blockData[$i + $offset]);
                    v.$ = $parent;
                    v.iteratorPosition = $counter++;

                    return v;
                }

                : function() {return 0};

        function $loop()
        {
            return $parent = v,
                $parentLoop = $loopIterator,
                $counter = $offset = 0, $block = 1,
                $loopIterator = $next;
        }

        $loop.toString = function() {return ''+$data[0]};

        <!-- IF g$__DEBUG__ -->
        $loop.cloneForDebug = function()
        {
            var $d = [], $e = 5, $a = $loop();

            while ($a())
            {
                if (!--$e)
                {
                    v = v.$;
                    $loopIterator = $parentLoop;
                    break;
                }

                v.$ = v.iteratorPosition = 0;
                $d.push(v);
            }

            $d = E.clone($d);
            $d._ = $d._.replace(/^[^:]*/, 'ptl-loop');
            if (!$e) $d.__cutBy = $data[0] > 4 ? $data[0] - 4 : -1;

            return $d;
        }
        <!-- END:IF -->

        return $loop;
    }

    function y($length)
    {
        $length = parseInt($length);
        if (!($length > 0)) return 0;

        var $data = new Array($length + 2);

        $data[0] = $data[1] = 1;
        $data = [$length, $data];

        return w.x($data);
    }

    function z($a, $b, $global, $i, $j)
    {
        $j = $global ? g : a;

        if (!t($j[$a])) $j[$a] = 0;
        $i = +$j[$a] || 0;
        $j[$a] += $b;

        return $i;
    }

    if (!resyncCSRF())
    {
        $i = '2';
        do $i = (Math.random()+$i).substr(2);
        while ($i.length < 33);
        $i = $i.substr(0, 33);

        setcookie('T$', $i, 0, encodeURI({$cookie_path|js}), encodeURI({$cookie_domain|js}));
        antiCSRF = /(^|; )T\$=2/.test($document.cookie) ? $i : '';
    }

    $j = location;

    g = parseurl($j.search.replace(/\+/g, '%20').substr(1), '&', /^amp;/);

    $j = ('' + $j).replace(/#.*$/, '');

    g.__DEBUG__    = {g$__DEBUG__|js};
    g.__HOST__     = {g$__HOST__|js};
    g.__LANG__     = {g$__LANG__|js};
    g.__BASE__     = $masterBase;
    g.__AGENT__    = $baseAgent ? esc($baseAgent) + '/' : '';
    g.__URI__      = esc($j);
    g.__REFERER__  = esc($document.referrer);
    g.__LANG_ALT__ = $buffer && w.x($buffer);

    $buffer = [];

    if (t($baseAgent))
    {
        $j = esc(dUC($j).substr({g$__BASE__|allowhtml|length}+$baseAgent.length).split('?', 1)[0]).split('/');
        for ($i = 0; $i < $j.length; ++$i) if ($j[$i]) $loopIterator[$loopIterator.length] = g['__'+($loopIterator.length+1)+'__'] = $j[$i];
        g.__0__ = $loopIterator.join('/');

        $j = $document.cookie.match(/(^|; )v\$=([0-9]+)(; |$)/);

        w(
            0,
              $j && +$j[2] != $masterAppId
            ? [3, function() {w(w.r())}]
            : (
            /Safari/.test(navigator.userAgent)
                ? [4, 1, $baseAgent, g, $keys, 1, 5, 1, 'b', 3, function() {return g.b;}] // Block load, 2 steps : generating, then displaying.
                : [   1, $baseAgent, g, $keys, 1] // Dynamic load, 1 step : generating and displaying at the same time.
            )
        );
    }
}


function P$base($string, $noId)
{
    return base(str($string), $noId);
}

document.documentElement.className = document.documentElement.className.replace(/\bno-js\b/, '') + ' js';
var dUC = decodeURIComponent, eUC = encodeURIComponent;
window.a ? w(a[0], a[1], a[2], a[3], a[4]) : w();
